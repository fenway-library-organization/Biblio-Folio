[*]
method metadata = @@ Metadata

[AddressType]
#references = addressTypeId
data = address-types
ttl = 3600
uri = /addresstypes/{addresstypeId}

[AlternativeTitleType]
#references = alternativeTitleTypeId
data = alternative-title-types
ttl = 3600
uri = /alternative-title-types/{id}

[CallNumberType]
data = call-number-types
ttl = 3600
references = itemLevelCallNumberTypeId, FOOBAR.typeId
#references = callNumberTypeId, itemLevelCallNumberTypeId, FOOBAR.typeId
uri = /call-number-types/{id}

[Campus/es]
super = LocationUnit
references = campusId
ttl = 3600
uri = /location-units/campuses/{id}

[Classification]

[ClassificationType]
data = classification-types
#references = classificationTypeId
ttl = 3600
uri = /classification-types/{classificationTypeId}

[Contributor]

[ContributorNameType]
data = contributor-name-types
#references = contributorNameTypeId
ttl = 3600
uri = /contributor-name-types/{contributorNameTypeId}

[ContributorType]
data = contributor-types
#references = contributorTypeId
ttl = 3600
uri = /contributor-types/{contributorTypeId}

[CopyrightStatus/es]
references = copyrightStatusId
ttl = 3600
uri = /coursereserves/copyrightstatuses/{status_id}

[CourseListing]
#references = courseListingId
ttl = 1
uri = /coursereserves/courselistings/{listing_id}

[CourseType]
#references = courseTypeId
ttl = 3600
uri = /coursereserves/coursetypes/{type_id}

[Course]
#references = courseId
ttl = 1
uri = /coursereserves/courses/{course_id}

[Department]
#references = departmentId
ttl = 3600
uri = /coursereserves/departments/{department_id}

[ElectronicAccessRelationship]
data = electronic-access-relationships
ttl = 3600
uri = /electronic-access-relationships/{electronicAccessRelationshipId}

[FileDefinition]
ttl = 1

[HoldingsNoteType]
data = holdings-note-types
#references = holdingsNoteTypeId
ttl = 3600
uri = /holdings-note-types/{id}

[HoldingsRecord]
#references = holdingsRecordId
ttl = 1
uri = /holdings-storage/holdings/{holdingsRecordId}

[HoldingsType]
data = holdings-types
#references = holdingsTypeId
ttl = 3600
uri = /holdings-types/{id}

[Identifier]

[IdentifierType]
data = identifier-types
#references = identifierTypeId
ttl = 3600
uri = /identifier-types/{identifierTypeId}

[IllPolic/y/ies]
data = ill-policies
references = illPolicyId
ttl = 3600
uri = /ill-policies/{id}

[Instance]
references = subInstanceId, superInstanceId
#references = instanceId, subInstanceId, superInstanceId
ttl = 1
uri = /inventory/instances/{instanceId}
method source = @id Source /source-storage/formattedRecords/{instanceId}?identifier=INSTANCE
method classifications = @@ Classification[]
method contributors = @@ Contributor[]
method notes = @@ InstanceNote[]
method identifiers = @@ Identifier[]
method status = @@ InstanceStatus
method raw_source = @id Biblio::Folio::MARC /source-storage/formattedRecords/{instanceId}?identifier=INSTANCE :: rawRecord.content
method marc_record = {
    use Biblio::Folio::MARC;
    my ($self) = @_;
    return $self->{'marc_record'} ||= do {
        my $marc = $self->raw_source;
        if (!defined $marc) {
            my $id = $self->id;
            die "no source record for instance $id";
        }
        return Biblio::Folio::MARC->new('marcref' => \$marc);
    };
}

[InstanceFormat]
data = instance-formats
#references = instanceFormatId
ttl = 3600
uri = /instance-formats/{instanceFormatId}

[InstanceNote]

[InstanceNoteType]
data = instance-note-types
#references = instanceNoteTypeId
ttl = 3600
uri = /instance-note-types/{id}

[InstanceRelationshipType]
data = instance-relationship-types
#references = instanceRelationshipTypeId
ttl = 3600
uri = /instance-relationship-types/{relationshipTypeId}

[InstanceStatus/es]
data = instance-statuses
ttl = 3600
uri = /instance-statuses/{instanceStatusId}

[InstanceType]
data = instance-types
#references = instanceTypeId
ttl = 3600
uri = /instance-types/{instanceTypeId}

[Institution]
super = LocationUnit
#references = institutionId
ttl = 3600
uri = /location-units/institutions/{id}

[ItemDamagedStatus/es]
data = item-damaged-statuses
references = itemDamagedStatusId
ttl = 3600
uri = /item-damaged-statuses/{id}

[ItemNoteType]
data = item-note-types
#references = itemNoteTypeId
ttl = 3600
uri = /item-note-types/{id}

[Item]
#references = itemId
ttl = 1
uri = /item-storage/items/{itemID}

[JobExecution]
ttl = 1
uri = /change-manager/jobExecutions/{id}
method results = @id /metadata-provider/logs/{jobExecutionId} :: jobExecutionResultLogs -> array

[Librar/y/ies]
super = LocationUnit
references = libraryId
ttl = 3600
uri = /location-units/libraries/{id}

[LoanType]
data = loan-types
references = permanentLoanTypeId, temporaryLoanTypeId
ttl = 3600
uri = /loan-types/{loantypeId}

[Location]
data = locations
references = effectiveLocationId, permanentLocationId, temporaryLocationId
#references = locationId, effectiveLocationId, permanentLocationId, temporaryLocationId
ttl = 3600
uri = /locations/{id}

[LocationUnit]
data = location-units
ttl = 3600
uri = /locations-units/{id}
method _all = {
    my ($cls, $site) = @_;
    return map { $site->objects($_, 'limit' => 1<<31) }
        qw(institution campus library);
}

[MappingRules]
ttl = 3600
uri = /mapping-rules

[Marc]
ttl = 0

[MaterialType]
data = material-types
#references = materialTypeId
ttl = 3600
uri = /material-types/{materialtypeId}

[Metadata/]

[ModeOfIssuance]
data = modes-of-issuance
#references = modeOfIssuanceId
ttl = 3600
uri = /modes-of-issuance/{modeOfIssuanceId}

[NatureOfContentTerm]
data = nature-of-content-terms
#references = natureOfContentTermId
ttl = 3600
uri = /nature-of-content-terms/{id}

[Platform]
#references = platformId
ttl = 3600
uri = /platforms/{platformId}

[PreferredContactType]
#references = preferredContactTypeId
ttl = 3600
# uri = ???

[ProcessingStatus/es]
references = processingStatusId
ttl = 3600
uri = /coursereserves/processingstatuses/{status_id}

[Relationship]
#references = relationshipId
ttl = 3600
uri = /instance-relationship-types/{relationshipTypeId}

[Schedule]
#references = scheduleId
ttl = 3600
# uri = ???

[ServicePoint]
data = service-points
references = defaultServicePointId, inTransitDestinationServicePointId, servicePointsId, servicepointId
#references = servicePointId, defaultServicePointId, inTransitDestinationServicePointId, servicePointsId, servicepointId
ttl = 3600
uri = /service-points/{servicepointId}

[SourceRecord]
#references = sourceRecordId
ttl = 3600
uri = /source-storage/records/{id}

[StatisticalCodeType]
data = statistical-code-types
#references = statisticalCodeTypeId
ttl = 3600
uri = /statistical-code-types/{statisticalCodeTypeId}

[StatisticalCode]
data = statistical-codes
#references = statisticalCodeId
ttl = 3600
uri = /statistical-codes/{statisticalCodeId}

[Term]
#references = termId
ttl = 3600
uri = /coursereserves/terms/{term_id}

[UploadDefinition]
ttl = 1
uri = /data-import/uploadDefinitions/{uploadDefinitionId}
#method add_files = @id /data-import/uploadDefinitions/{uploadDefinitionId}/files UploadDefinition
method file_definitions = @id FileDefinition /data-import/uploadDefinitions/{uploadDefinitionId}/files

[User]
references = proxyUserId, staffMemberId, Metadata.updatedByUserId
#references = userId, proxyUserId, staffMemberId, Metadata.updatedByUserId
ttl = 1
uri = /users/{userId}

# Literals:
#   countryId
#   externalId
#   externalSystemId
#   formerId
#   intervalId
#   registerId
#   registrarId

